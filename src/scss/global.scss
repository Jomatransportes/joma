@charset "utf-8";
// First up: config and functions
@import 'config';

// Next: pull in gorko for design tokens
@import '../../node_modules/gorko/gorko.scss';

@import 'reset';

// Global styles start
:root {
  --flow-space: #{get-size('600')};

  --color-light: #fbf3ea;
  --color-light-glare: #fff9f2;
  --color-dark: #122932;
  --color-dark-glare: #154254;
  --color-primary: #b43741;

  --radius: 0.25rem;

  /* Type scale https://utopia.fyi/type/calculator?c=320,16,1.125,1200,20,1.381,7,1,&s=,1.5%7C2%7C3%7C4%7C6,l-3xl */
  --step--1: clamp(0.91rem, calc(0.88rem + 0.03vw), 0.89rem);
  --step-0: clamp(1rem, calc(0.91rem + 0.45vw), 1.25rem);
  --step-1: clamp(1.13rem, calc(0.91rem + 1.09vw), 1.73rem);
  --step-2: clamp(1.27rem, calc(0.86rem + 2.03vw), 2.38rem);
  --step-3: clamp(1.42rem, calc(0.74rem + 3.4vw), 3.29rem);
  --step-4: clamp(1.6rem, calc(0.53rem + 5.35vw), 4.55rem);
  --step-5: clamp(1.8rem, calc(0.17rem + 8.14vw), 6.28rem);
  --step-6: clamp(2.03rem, calc(-0.39rem + 12.08vw), 8.67rem);
  --step-7: clamp(2.28rem, calc(-1.24rem + 17.63vw), 11.98rem);

  /* Space scale https://utopia.fyi/space/calculator?c=320,16,1.125,1200,20,1.381,7,1,&s=,1.5%7C2%7C3%7C4%7C6,l-3xl */
  --space-xs: clamp(0.5rem, calc(0.45rem + 0.23vw), 0.63rem);
  --space-s: clamp(1rem, calc(0.91rem + 0.45vw), 1.25rem);
  --space-m: clamp(1.5rem, calc(1.36rem + 0.68vw), 1.88rem);
  --space-l: clamp(2rem, calc(1.82rem + 0.91vw), 2.5rem);
  --space-xl: clamp(3rem, calc(2.73rem + 1.36vw), 3.75rem);
  --space-2xl: clamp(4rem, calc(3.64rem + 1.82vw), 5rem);
  --space-3xl: clamp(6rem, calc(5.45rem + 2.73vw), 7.5rem);

  /* Space scale one-up pairs */
  --space-s-m: clamp(1rem, calc(0.68rem + 1.59vw), 1.88rem);
  --space-m-l: clamp(1.5rem, calc(1.14rem + 1.82vw), 2.5rem);
  --space-l-xl: clamp(2rem, calc(1.36rem + 3.18vw), 3.75rem);
  --space-xl-2xl: clamp(3rem, calc(2.27rem + 3.64vw), 5rem);
  --space-2xl-3xl: clamp(4rem, calc(2.73rem + 6.36vw), 7.5rem);

  /* Space scale custom pairs */
  --space-l-3xl: clamp(2rem, calc(0rem + 10vw), 7.5rem);
}

body {
  background: get-color('dark');
  color: get-color('light');
  line-height: 1.5;
  font-size: get-size('500');
  padding: var(--space-l) 0;
  padding-block: var(--space-l);

  @include apply-utility('font', 'base');

  ::selection {
    // We set this as an RGBA because that's how you get a solid color, by usign 0.99
    background-color: rgba(get-color('light'), 0.99);
    color: get-color('dark-shade');
  }
}

a:not([class]) {
  color: currentColor;
}

:focus {
  outline: 2px dashed get-color('primary');
  outline-offset: 0.25rem;
}

main:focus {
  outline: none;
}

h1,
h2,
h3,
h4 {
  font-weight: 900;

  @include apply-utility('font', 'sans');
  @include apply-utility('leading', 'flat');
}

dl {
  display: grid;
  grid-template-columns: minmax(0, max-content) 1fr;
  grid-gap: 0.5rem 1.5rem;
}

// High contrast selection because it can help visually-impaired
// folks read the text easier
::selection {
  color: get-color('light');

  // We set this as an RGBA because that's how you get a solid color, by using 0.99
  // alpha value. Browsers are wild.
  background: rgba(get-color('dark-shade'), 0.99);
}

// Import blocks
@import 'blocks/site-head';
@import 'blocks/intro';
@import 'blocks/button';
@import 'blocks/skip-link';

// Import utilities
@import 'utilities/flow';
@import 'utilities/visually-hidden';
@import 'utilities/wrapper';
@import 'utilities/radius';

[role='list'] {
  padding: 0;
}

[role='contentinfo'] {
  margin-top: var(--space-xl-2xl);
  margin-block-start: var(--space-xl-2xl);
  font-size: var(--step--2);
}

.steps {
  --flow-space: var(--space-l);
}

.card {
  --flow-space: var(--space-s);

  padding: var(--space-s);
  border: 3px dashed get-color('light');
  border-radius: 0.25rem;
  border-radius: var(--radius);
}
.card p {
  font-size: var(--step--2);
}

/* Compositions */
.auto-grid {
  display: grid;
  grid-template-columns: repeat(
    var(--grid-placement, auto-fill),
    minmax(var(--grid-min-item-size, 16rem), 1fr)
  );
  gap: var(--gutter, var(--space-s));
}

.cluster {
  display: flex;
  flex-wrap: wrap;
  gap: var(--gutter, var(--space-s));
  justify-content: var(--cluster-horizontal-alignment, flex-start);
  align-items: var(--cluster-vertical-alignment, center);
}

.main {
  &__info {
    margin-top: get-size('900');
    margin-block-start: get-size('900');
  }
}
